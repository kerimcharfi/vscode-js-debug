/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_dwarfdebugsymbolcontainer_free(a: number): void;
export function dwarfdebugsymbolcontainer_new(a: number, b: number): number;
export function dwarfdebugsymbolcontainer_find_file_info_from_address(a: number, b: number): number;
export function dwarfdebugsymbolcontainer_source_list(a: number): number;
export function dwarfdebugsymbolcontainer_find_address_from_file_info(a: number, b: number, c: number): void;
export function dwarfdebugsymbolcontainer_variable_name_list(a: number, b: number): number;
export function dwarfdebugsymbolcontainer_global_variable_name_list(a: number, b: number): number;
export function dwarfdebugsymbolcontainer_get_variable_info(a: number, b: number, c: number, d: number, e: number, f: number, g: number): number;
export function __wbg_memoryslice_free(a: number): void;
export function __wbg_get_memoryslice_address(a: number): number;
export function __wbg_set_memoryslice_address(a: number, b: number): void;
export function __wbg_get_memoryslice_byte_size(a: number): number;
export function __wbg_set_memoryslice_byte_size(a: number, b: number): void;
export function memoryslice_set_memory_slice(a: number, b: number, c: number): void;
export function __wbg_variableinfo_free(a: number): void;
export function variableinfo_evaluate(a: number, b: number): void;
export function variableinfo_resume_with_memory_slice(a: number, b: number, c: number): void;
export function variableinfo_is_required_memory_slice(a: number): number;
export function variableinfo_is_completed(a: number): number;
export function variableinfo_required_memory_slice(a: number): number;
export function variableinfo_memory(a: number, b: number): void;
export function variableinfo_address(a: number, b: number): void;
export function __wbg_wasmvalue_free(a: number): void;
export function wasmvalue_from_i32(a: number): number;
export function wasmvalue_from_i64(a: number, b: number): number;
export function wasmvalue_from_f32(a: number): number;
export function wasmvalue_from_f64(a: number): number;
export function __wbg_wasmvaluevector_free(a: number): void;
export function wasmvaluevector_new(): number;
export function wasmvaluevector_push(a: number, b: number): void;
export function __wbg_wasmlineinfo_free(a: number): void;
export function __wbg_get_wasmlineinfo_line(a: number, b: number): void;
export function __wbg_set_wasmlineinfo_line(a: number, b: number, c: number): void;
export function __wbg_get_wasmlineinfo_column(a: number, b: number): void;
export function __wbg_set_wasmlineinfo_column(a: number, b: number, c: number): void;
export function wasmlineinfo_new(a: number, b: number, c: number, d: number, e: number, f: number): number;
export function wasmlineinfo_file(a: number, b: number): void;
export function __wbg_variablevector_free(a: number): void;
export function variablevector_size(a: number): number;
export function variablevector_at_name(a: number, b: number, c: number): void;
export function variablevector_at_address(a: number, b: number, c: number): void;
export function variablevector_at_display_name(a: number, b: number, c: number): void;
export function variablevector_at_type_name(a: number, b: number, c: number): void;
export function variablevector_at_group_id(a: number, b: number): number;
export function variablevector_at_chile_group_id(a: number, b: number, c: number): void;
export function __wbindgen_malloc(a: number): number;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number): number;
export function __wbindgen_free(a: number, b: number): void;
